{"remainingRequest":"/Users/lukeowen/react-blazeui/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/lukeowen/react-blazeui/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/lukeowen/react-blazeui/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/lukeowen/react-blazeui/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/lukeowen/react-blazeui/src/lib/components/Button/index.jsx","dependencies":[{"path":"/Users/lukeowen/react-blazeui/src/lib/components/Button/index.jsx","mtime":1581159131880},{"path":"/Users/lukeowen/react-blazeui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lukeowen/react-blazeui/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/lukeowen/react-blazeui/src/lib/components/Button/index.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Group from '../Input/Group';\n\nfunction Button(props) {\n  var children = props.children,\n      className = props.className,\n      buttonType = props.buttonType,\n      type = props.type,\n      size = props.size,\n      fluid = props.fluid,\n      ghost = props.ghost,\n      rounded = props.rounded,\n      active = props.active,\n      other = _objectWithoutProperties(props, [\"children\", \"className\", \"buttonType\", \"type\", \"size\", \"fluid\", \"ghost\", \"rounded\", \"active\"]);\n\n  var classes = classNames('c-button', _defineProperty({}, \"c-button--\".concat(type), type && !ghost), {\n    'c-button--ghost': !type && ghost\n  }, _defineProperty({}, \"c-button--ghost-\".concat(type), type && ghost), {\n    'c-button--block': fluid\n  }, {\n    'c-button--rounded': rounded\n  }, {\n    'c-button--active': active\n  }, _defineProperty({}, \"u-\".concat(size), size), className);\n  return React.createElement(\"button\", Object.assign({}, other, {\n    type: buttonType,\n    className: classes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), children);\n}\n\nButton.propTypes = {\n  /**\n   * This element can have children\n   */\n  children: PropTypes.node,\n\n  /**\n   * Additional classes\n   */\n  className: PropTypes.string,\n\n  /**\n   * The type of HTML button\n   */\n  buttonType: PropTypes.oneOf(['button', 'submit', 'reset']),\n\n  /**\n   * The type of button\n   */\n  type: PropTypes.oneOf(['brand', 'info', 'warning', 'success', 'error']),\n\n  /**\n   * The type of button\n   */\n  size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'super']),\n\n  /**\n   * Defines a full width button\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Defines a rounded button\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Defines an active state\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Defines an ghost state\n   */\n  ghost: PropTypes.bool\n};\nButton.defaultProps = {\n  children: null,\n  buttonType: 'button',\n  type: null,\n  size: null,\n  fluid: false,\n  rounded: false,\n  active: false,\n  className: null,\n  ghost: false\n};\nButton.Group = Group;\nvar _default = Button;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/lukeowen/react-blazeui/src/lib/components/Button/index.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/lukeowen/react-blazeui/src/lib/components/Button/index.jsx\");\n  leaveModule(module);\n})();\n\n;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"children\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"This element can have children\"\n    },\n    \"buttonType\": {\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'button'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'submit'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'reset'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The type of HTML button\"\n    },\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'brand'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'info'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'warning'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'success'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'error'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The type of button\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'xsmall'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'xlarge'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'super'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"The type of button\"\n    },\n    \"fluid\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Defines a full width button\"\n    },\n    \"rounded\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Defines a rounded button\"\n    },\n    \"active\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Defines an active state\"\n    },\n    \"className\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Additional classes\"\n    },\n    \"ghost\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"Defines an ghost state\"\n    }\n  }\n};",{"version":3,"sources":["/Users/lukeowen/react-blazeui/src/lib/components/Button/index.jsx"],"names":["React","PropTypes","classNames","Group","Button","props","children","className","buttonType","type","size","fluid","ghost","rounded","active","other","classes","propTypes","node","string","oneOf","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Group from '../Input/Group';\n\nfunction Button(props) {\n  const {\n    children, className, buttonType, type, size, fluid, ghost, rounded, active, ...other\n  } = props;\n  const classes = classNames(\n    'c-button',\n    { [`c-button--${type}`]: (type && !ghost) },\n    { 'c-button--ghost': (!type && ghost) },\n    { [`c-button--ghost-${type}`]: (type && ghost) },\n    { 'c-button--block': fluid },\n    { 'c-button--rounded': rounded },\n    { 'c-button--active': active },\n    { [`u-${size}`]: size },\n    className,\n  );\n\n  return (\n    <button {...other} type={buttonType} className={classes}>\n      { children }\n    </button>\n  );\n}\n\nButton.propTypes = {\n  /**\n   * This element can have children\n   */\n  children: PropTypes.node,\n  /**\n   * Additional classes\n   */\n  className: PropTypes.string,\n  /**\n   * The type of HTML button\n   */\n  buttonType: PropTypes.oneOf([\n    'button',\n    'submit',\n    'reset',\n  ]),\n  /**\n   * The type of button\n   */\n  type: PropTypes.oneOf([\n    'brand',\n    'info',\n    'warning',\n    'success',\n    'error',\n  ]),\n  /**\n   * The type of button\n   */\n  size: PropTypes.oneOf([\n    'xsmall',\n    'small',\n    'medium',\n    'large',\n    'xlarge',\n    'super',\n  ]),\n  /**\n   * Defines a full width button\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Defines a rounded button\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Defines an active state\n   */\n  active: PropTypes.bool,\n  /**\n   * Defines an ghost state\n   */\n  ghost: PropTypes.bool,\n};\n\nButton.defaultProps = {\n  children: null,\n  buttonType: 'button',\n  type: null,\n  size: null,\n  fluid: false,\n  rounded: false,\n  active: false,\n  className: null,\n  ghost: false,\n};\n\nButton.Group = Group;\n\nexport default Button;\n"]}]}